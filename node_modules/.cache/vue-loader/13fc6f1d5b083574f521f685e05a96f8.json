{"remainingRequest":"/home/rinc/vue_test/nightcall_game/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rinc/vue_test/nightcall_game/src/Chapter5.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rinc/vue_test/nightcall_game/src/Chapter5.vue","mtime":1563890083869},{"path":"/home/rinc/vue_test/nightcall_game/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rinc/vue_test/nightcall_game/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/rinc/vue_test/nightcall_game/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rinc/vue_test/nightcall_game/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    props: ['player', 'step'],\n    mounted() {\n        this.synth_player.element = document.getElementById('synth_player')\n    },\n    data() {\n        return {\n            currentTime: 0,\n            synth_player: {\n                element: null,\n                paused: true\n            },\n            midi: {\n                '1.2': 'G'\n            },\n            context: null,\n            buffer: null\n        }\n    },\n    computed: {\n    },\n    methods: {\n        togglePlayer() {\n            if (this.synth_player.paused) this.synth_player.element.play()\n            else this.synth_player.element.pause()\n            this.synth_player.paused = this.synth_player.element.paused\n        },\n        test() {\n            this.context = new AudioContext();\n            var context = this.context\n\n            window.fetch('./assets/nightcall.mp3')\n                .then(response => response.arrayBuffer())\n                .then(arrayBuffer => context.decodeAudioData(arrayBuffer))\n                .then(audioBuffer => {\n                    console.log('HERE');\n\n                    this.buffer = audioBuffer;\n                })\n        },\n        play() {\n            const source = this.context.createBufferSource();\n            source.buffer = this.buffer;\n            source.connect(this.context.destination);\n            source.start();\n        }\n    },\n    watch:{\n        currentTime(time) {\n            console.log(time);\n\n        }\n    }\n}\n",{"version":3,"sources":["Chapter5.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Chapter5.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div>\n        <div v-if=\"step == 0\">\n            <!-- Dubravsky cintorin & kostol -->\n\n            <audio id=\"synth_player\" @timeupdate=\"currentTime = $event.target.currentTime\" controls loop style=\"display: none;\">\n                <source src=\"./assets/nightcall.mp3\" type=\"audio/mpeg\">\n            </audio>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: ['player', 'step'],\n        mounted() {\n            this.synth_player.element = document.getElementById('synth_player')\n        },\n        data() {\n            return {\n                currentTime: 0,\n                synth_player: {\n                    element: null,\n                    paused: true\n                },\n                midi: {\n                    '1.2': 'G'\n                },\n                context: null,\n                buffer: null\n            }\n        },\n        computed: {\n        },\n        methods: {\n            togglePlayer() {\n                if (this.synth_player.paused) this.synth_player.element.play()\n                else this.synth_player.element.pause()\n                this.synth_player.paused = this.synth_player.element.paused\n            },\n            test() {\n                this.context = new AudioContext();\n                var context = this.context\n\n                window.fetch('./assets/nightcall.mp3')\n                    .then(response => response.arrayBuffer())\n                    .then(arrayBuffer => context.decodeAudioData(arrayBuffer))\n                    .then(audioBuffer => {\n                        console.log('HERE');\n\n                        this.buffer = audioBuffer;\n                    })\n            },\n            play() {\n                const source = this.context.createBufferSource();\n                source.buffer = this.buffer;\n                source.connect(this.context.destination);\n                source.start();\n            }\n        },\n        watch:{\n            currentTime(time) {\n                console.log(time);\n\n            }\n        }\n    }\n</script>\n"]}]}