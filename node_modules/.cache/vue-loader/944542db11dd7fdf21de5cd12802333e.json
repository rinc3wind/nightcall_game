{"remainingRequest":"/home/rinc/vue_test/nightcall_game/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rinc/vue_test/nightcall_game/src/Finale.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rinc/vue_test/nightcall_game/src/Finale.vue","mtime":1564034988893},{"path":"/home/rinc/vue_test/nightcall_game/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rinc/vue_test/nightcall_game/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/rinc/vue_test/nightcall_game/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rinc/vue_test/nightcall_game/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    props: ['player', 'step'],\n    data() {\n        return {\n            game: null,\n            char: {\n                name: null,\n                xp: 6,\n                strength: 2,\n                dexterity: 2,\n                synth_power: 2,\n                hp: 6,\n                sp: 6,\n                ac: 2,\n                inventory: []\n            }\n        }\n    },\n    methods: {\n        changeStats(stat, which) {\n            if (which == '+' && this.char.xp > 0) {\n                this.char[stat]++\n                this.char.xp--\n            }\n            if (which == '-' && this.char.xp <= 6 && this.char[stat] > 2) {\n                this.char[stat]--\n                this.char.xp++\n            }\n            this.char.hp = this.char.strength * 3\n            this.char.sp = this.char.synth_power * 3\n            this.char.ac = this.char.dexterity\n        },\n        diceRoll(sides) {\n            return Math.floor(Math.random() * sides) + 1\n        }\n    },\n    mounted() {\n        this.char.name = this.player.name\n        this.char.inventory = this.player.inventory\n\n        bus.$on('start_combat', () => {\n            this.$emit('setStep', 2)\n        })\n        // create the game instance\n        this.game = new RL.Game();\n        var game = this.game\n\n        // var mapData = [\n        //     \"#####################\",\n        //     \"#.........#.........#\",\n        //     \"#....Z....#....##...#\",\n        //     \"#.........+....##...#\",\n        //     \"#.........#.........#\",\n        //     \"#.#..#..#.#.........#\",\n        //     \"#.........#...####+##\",\n        //     \"#.........#...#.....#\",\n        //     \"#.........#...#.....#\",\n        //     \"#.........#...#.....#\",\n        //     \"#####################\"\n        // ];\n        var mapData = [\n            \"############\",\n            \"##.S..B#####\",\n            \"##.S..B####\",\n            \"##.....####\",\n            \"##.S....D##\",\n            \"#####..####\",\n            \"#####V.####\",\n            \"#####..####\",\n            \"##....S...+\",\n            \"##.S....#W+\",\n            \"##.S....#W#\",\n            \"#######.###\",\n            \"##B......S#\",\n            \"##B......S#\",\n            \"##B......S#\",\n            \"##B......S#\",\n            \"###########\"\n        ];\n\n        var mapCharToType = {\n            '#': 'wall',\n            '.': 'floor',\n            '+': 'door',\n            'S': 'table',\n            'B': 'bar',\n            'W': 'wc',\n            'V': 'vyhadzovaci',\n            'D': 'locked_door'\n        };\n\n        var entityCharToType = {\n            'Z': 'zombie'\n        };\n\n        var keyBindings = {\n            up: ['UP_ARROW', 'K', 'W'],\n            down: ['DOWN_ARROW', 'J', 'S'],\n            left: ['LEFT_ARROW', 'H', 'A'],\n            right: ['RIGHT_ARROW', 'L', 'D'],\n        };\n\n        game.map.loadTilesFromArrayString(mapData, mapCharToType, 'floor');\n        game.entityManager.loadFromArrayString(mapData, entityCharToType);\n\n        // add some lights\n        // game.lighting.set(3, 7, 255, 0, 0);\n        // game.lighting.set(7, 7, 0, 0, 255);\n\n        // generate and assign a map object (repaces empty default)\n        game.setMapSize(game.map.width, game.map.height);\n\n        // add input keybindings\n        game.input.addBindings(keyBindings);\n\n        // or just add by entity type\n        //game.entityManager.add(5, 9, 'zombie');\n\n        // set player starting position\n        game.player.x = 6;\n        game.player.y = 15;\n\n        // make the view a little smaller\n        game.renderer.resize(30, 20);\n\n        // get existing DOM elements\n        var mapContainerEl = document.getElementById('example-map-container');\n        var consoleContainerEl = document.getElementById('example-console-container');\n\n        // append elements created by the game to the DOM\n        mapContainerEl.appendChild(game.renderer.canvas);\n        consoleContainerEl.appendChild(game.console.el);\n\n        game.renderer.layers = [\n            new RL.RendererLayer(game, 'map', {\n                draw: false,\n                mergeWithPrevLayer: false\n            }),\n            new RL.RendererLayer(game, 'entity', {\n                draw: false,\n                mergeWithPrevLayer: true\n            }),\n            new RL.RendererLayer(game, 'lighting', {\n                draw: true,\n                mergeWithPrevLayer: false\n            }),\n            new RL.RendererLayer(game, 'fov', {\n                draw: true,\n                mergeWithPrevLayer: false\n            }),\n        ];\n\n        game.console.log('The game starts.');\n        // start the game\n        game.start();\n\n    }\n}\n",{"version":3,"sources":["Finale.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Finale.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div>\n        <div v-show=\"step == 0\">\n\n            <div>\n                <span>Strength: </span>\n                <span>{{ char.strength }}</span>\n                <span class=\"stat_span\" @click=\"changeStats('strength', '+')\">+</span>\n                <span class=\"stat_span\" @click=\"changeStats('strength', '-')\">-</span>\n            </div>\n\n            <div>\n                <span>Dexterity: </span>\n                <span>{{ char.dexterity }}</span>\n                <span class=\"stat_span\" @click=\"changeStats('dexterity', '+')\">+</span>\n                <span class=\"stat_span\" @click=\"changeStats('dexterity', '-')\">-</span>\n            </div>\n            <div>\n                <span>Synth power: </span>\n                <span>{{ char.synth_power }}</span>\n                <span class=\"stat_span\" @click=\"changeStats('synth_power', '+')\">+</span>\n                <span class=\"stat_span\" @click=\"changeStats('synth_power', '-')\">-</span>\n            </div>\n\n            <div style=\"margin-top: 20px;\">\n                Points to allocate: {{ char.xp }}\n            </div>\n\n            <div style=\"margin-top: 20px;\">\n                <span>Hit points: </span>\n                <span>{{ char.hp }}</span>\n            </div>\n            <div>\n                <span>Synth power: </span>\n                <span>{{ char.sp }}</span>\n            </div>\n            <div style=\"margin-bottom: 20px;\">\n                <span>Armor class: </span>\n                <span>{{ char.ac }}</span>\n            </div>\n\n            <div v-if=\"char.xp == 0\" @click=\"$emit('setStep', 1)\" class=\"choice\">{{ lang.continue }}</div>\n        </div>\n        <div v-show=\"step == 1\">\n            <div id=\"example-map-container\" class=\"game-container\"></div>\n            <div id=\"example-console-container\" class=\"game-container\"></div>\n        </div>\n        <div v-if=\"step == 2\">\n            COMBAT\n            <div @click=\"$emit('setStep', 1)\" class=\"choice\">{{ lang.continue }}</div>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: ['player', 'step'],\n        data() {\n            return {\n                game: null,\n                char: {\n                    name: null,\n                    xp: 6,\n                    strength: 2,\n                    dexterity: 2,\n                    synth_power: 2,\n                    hp: 6,\n                    sp: 6,\n                    ac: 2,\n                    inventory: []\n                }\n            }\n        },\n        methods: {\n            changeStats(stat, which) {\n                if (which == '+' && this.char.xp > 0) {\n                    this.char[stat]++\n                    this.char.xp--\n                }\n                if (which == '-' && this.char.xp <= 6 && this.char[stat] > 2) {\n                    this.char[stat]--\n                    this.char.xp++\n                }\n                this.char.hp = this.char.strength * 3\n                this.char.sp = this.char.synth_power * 3\n                this.char.ac = this.char.dexterity\n            },\n            diceRoll(sides) {\n                return Math.floor(Math.random() * sides) + 1\n            }\n        },\n        mounted() {\n            this.char.name = this.player.name\n            this.char.inventory = this.player.inventory\n\n            bus.$on('start_combat', () => {\n                this.$emit('setStep', 2)\n            })\n            // create the game instance\n            this.game = new RL.Game();\n            var game = this.game\n\n            // var mapData = [\n            //     \"#####################\",\n            //     \"#.........#.........#\",\n            //     \"#....Z....#....##...#\",\n            //     \"#.........+....##...#\",\n            //     \"#.........#.........#\",\n            //     \"#.#..#..#.#.........#\",\n            //     \"#.........#...####+##\",\n            //     \"#.........#...#.....#\",\n            //     \"#.........#...#.....#\",\n            //     \"#.........#...#.....#\",\n            //     \"#####################\"\n            // ];\n            var mapData = [\n                \"############\",\n                \"##.S..B#####\",\n                \"##.S..B####\",\n                \"##.....####\",\n                \"##.S....D##\",\n                \"#####..####\",\n                \"#####V.####\",\n                \"#####..####\",\n                \"##....S...+\",\n                \"##.S....#W+\",\n                \"##.S....#W#\",\n                \"#######.###\",\n                \"##B......S#\",\n                \"##B......S#\",\n                \"##B......S#\",\n                \"##B......S#\",\n                \"###########\"\n            ];\n\n            var mapCharToType = {\n                '#': 'wall',\n                '.': 'floor',\n                '+': 'door',\n                'S': 'table',\n                'B': 'bar',\n                'W': 'wc',\n                'V': 'vyhadzovaci',\n                'D': 'locked_door'\n            };\n\n            var entityCharToType = {\n                'Z': 'zombie'\n            };\n\n            var keyBindings = {\n                up: ['UP_ARROW', 'K', 'W'],\n                down: ['DOWN_ARROW', 'J', 'S'],\n                left: ['LEFT_ARROW', 'H', 'A'],\n                right: ['RIGHT_ARROW', 'L', 'D'],\n            };\n\n            game.map.loadTilesFromArrayString(mapData, mapCharToType, 'floor');\n            game.entityManager.loadFromArrayString(mapData, entityCharToType);\n\n            // add some lights\n            // game.lighting.set(3, 7, 255, 0, 0);\n            // game.lighting.set(7, 7, 0, 0, 255);\n\n            // generate and assign a map object (repaces empty default)\n            game.setMapSize(game.map.width, game.map.height);\n\n            // add input keybindings\n            game.input.addBindings(keyBindings);\n\n            // or just add by entity type\n            //game.entityManager.add(5, 9, 'zombie');\n\n            // set player starting position\n            game.player.x = 6;\n            game.player.y = 15;\n\n            // make the view a little smaller\n            game.renderer.resize(30, 20);\n\n            // get existing DOM elements\n            var mapContainerEl = document.getElementById('example-map-container');\n            var consoleContainerEl = document.getElementById('example-console-container');\n\n            // append elements created by the game to the DOM\n            mapContainerEl.appendChild(game.renderer.canvas);\n            consoleContainerEl.appendChild(game.console.el);\n\n            game.renderer.layers = [\n                new RL.RendererLayer(game, 'map', {\n                    draw: false,\n                    mergeWithPrevLayer: false\n                }),\n                new RL.RendererLayer(game, 'entity', {\n                    draw: false,\n                    mergeWithPrevLayer: true\n                }),\n                new RL.RendererLayer(game, 'lighting', {\n                    draw: true,\n                    mergeWithPrevLayer: false\n                }),\n                new RL.RendererLayer(game, 'fov', {\n                    draw: true,\n                    mergeWithPrevLayer: false\n                }),\n            ];\n\n            game.console.log('The game starts.');\n            // start the game\n            game.start();\n\n        }\n    }\n</script>\n\n<style>\n    .stat_span {\n        padding-left: 10px;\n        cursor: pointer;\n        font-size: 25px;\n    }\n    .stat_span:hover {\n        color: white;\n    }\n</style>"]}]}