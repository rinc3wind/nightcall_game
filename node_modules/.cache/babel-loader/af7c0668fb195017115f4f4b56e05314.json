{"remainingRequest":"/home/rinc/vue_test/nightcall_game/node_modules/thread-loader/dist/cjs.js!/home/rinc/vue_test/nightcall_game/node_modules/babel-loader/lib/index.js!/home/rinc/vue_test/nightcall_game/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rinc/vue_test/nightcall_game/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rinc/vue_test/nightcall_game/src/Chapter5.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rinc/vue_test/nightcall_game/src/Chapter5.vue","mtime":1563899878200},{"path":"/home/rinc/vue_test/nightcall_game/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rinc/vue_test/nightcall_game/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rinc/vue_test/nightcall_game/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/rinc/vue_test/nightcall_game/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rinc/vue_test/nightcall_game/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: ['player', 'step'],\n  mounted: function mounted() {},\n  data: function data() {\n    return {\n      interval: null,\n      currentTime: 0,\n      sound: null,\n      audio_loaded: false,\n      toneVisible: false,\n      // synth_player: {\n      //     paused: true\n      // },\n      midi: {\n        '11.8': 'G',\n        '12.2': 'H',\n        '12.6': 'J',\n        '13.0': 'H',\n        '13.4': 'J',\n        '13.8': 'K',\n        '14.2': 'J',\n        '14.6': 'K'\n      },\n      note: null,\n      noteCode: null\n    };\n  },\n  computed: {},\n  methods: {\n    start: function start() {\n      var _this = this;\n\n      this.sound = new Howl({\n        src: ['mp3/nightcall.mp3']\n      });\n      this.sound.once('load', function () {\n        _this.audio_loaded = true; // this.interval = setInterval(() => {\n        //     this.currentTime = Math.floor(this.sound.seek() * 10) / 10\n        //     if (this.midi[this.currentTime]) {\n        //         this.toneVisible = true\n        //         setTimeout(() => {\n        //             this.toneVisible = false\n        //         }, 200)\n        //     }\n        // }, 50)\n      });\n    },\n    play: function play() {\n      this.sound.play();\n    },\n    test: function test() {\n      var self = this;\n      MIDI.loadPlugin({\n        instruments: ['bass', 'synth_drum', 'acoustic_grand_piano'],\n        onsuccess: function onsuccess() {\n          MIDI.Player.loadFile('mp3/nightcall.mid', function () {\n            MIDI.Player.addListener(function (data) {\n              // set it to your own function!\n              var now = data.now; // where we are now\n\n              var end = data.end; // time when song ends\n\n              var channel = data.channel; // channel note is playing on\n\n              var message = data.message; // 128 is noteOff, 144 is noteOn\n\n              var note = data.note; // the note\n\n              var velocity = data.velocity; // the velocity of the note\n\n              if (channel == 0) {\n                self.note = MIDI.noteToKey[note];\n                self.noteCode = note;\n              }\n            });\n            MIDI.Player.start();\n          });\n        }\n      });\n    }\n  },\n  watch: {}\n};",{"version":3,"sources":["Chapter5.vue"],"names":[],"mappings":";;;;;;;;;;;AAYA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CADA;AAEA,EAAA,OAFA,qBAEA,CACA,CAHA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,WAAA,EAAA,CAFA;AAGA,MAAA,KAAA,EAAA,IAHA;AAIA,MAAA,YAAA,EAAA,KAJA;AAKA,MAAA,WAAA,EAAA,KALA;AAMA;AACA;AACA;AACA,MAAA,IAAA,EAAA;AACA,gBAAA,GADA;AAEA,gBAAA,GAFA;AAGA,gBAAA,GAHA;AAIA,gBAAA,GAJA;AAKA,gBAAA,GALA;AAMA,gBAAA,GANA;AAOA,gBAAA,GAPA;AAQA,gBAAA;AARA,OATA;AAmBA,MAAA,IAAA,EAAA,IAnBA;AAoBA,MAAA,QAAA,EAAA;AApBA,KAAA;AAsBA,GA3BA;AA4BA,EAAA,QAAA,EAAA,EA5BA;AA8BA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,mBACA;AAAA;;AACA,WAAA,KAAA,GAAA,IAAA,IAAA,CAAA;AACA,QAAA,GAAA,EAAA,CAAA,mBAAA;AADA,OAAA,CAAA;AAGA,WAAA,KAAA,CAAA,IAAA,CAAA,MAAA,EAAA,YAAA;AACA,QAAA,KAAA,CAAA,YAAA,GAAA,IAAA,CADA,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAbA;AAcA,KAnBA;AAoBA,IAAA,IApBA,kBAoBA;AACA,WAAA,KAAA,CAAA,IAAA;AACA,KAtBA;AAuBA,IAAA,IAvBA,kBAuBA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,MAAA,IAAA,CAAA,UAAA,CAAA;AACA,QAAA,WAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,sBAAA,CADA;AAEA,QAAA,SAAA,EAAA,qBAAA;AACA,UAAA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA,mBAAA,EAAA,YAAA;AACA,YAAA,IAAA,CAAA,MAAA,CAAA,WAAA,CAAA,UAAA,IAAA,EAAA;AAAA;AACA,kBAAA,GAAA,GAAA,IAAA,CAAA,GAAA,CADA,CACA;;AACA,kBAAA,GAAA,GAAA,IAAA,CAAA,GAAA,CAFA,CAEA;;AACA,kBAAA,OAAA,GAAA,IAAA,CAAA,OAAA,CAHA,CAGA;;AACA,kBAAA,OAAA,GAAA,IAAA,CAAA,OAAA,CAJA,CAIA;;AACA,kBAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CALA,CAKA;;AACA,kBAAA,QAAA,GAAA,IAAA,CAAA,QAAA,CANA,CAMA;;AAEA,kBAAA,OAAA,IAAA,CAAA,EAAA;AACA,gBAAA,IAAA,CAAA,IAAA,GAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA;AACA,gBAAA,IAAA,CAAA,QAAA,GAAA,IAAA;AACA;AACA,aAZA;AAaA,YAAA,IAAA,CAAA,MAAA,CAAA,KAAA;AACA,WAfA;AAgBA;AAnBA,OAAA;AAqBA;AA9CA,GA9BA;AA8EA,EAAA,KAAA,EAAA;AA9EA,CAAA","sourcesContent":["<template>\n    <div>\n        <div v-if=\"step == 0\">\n            <!-- Dubravsky cintorin & kostol -->\n            <span v-if=\"audio_loaded == false\" @click=\"test\">START</span>\n            <span v-else @click=\"play\">PLAY</span>\n            <div style=\"position: absolute;\" :style=\"{ left: noteCode * 10 + 'px'  }\">{{ note }}</div>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: ['player', 'step'],\n        mounted() {\n        },\n        data() {\n            return {\n                interval: null,\n                currentTime: 0,\n                sound: null,\n                audio_loaded: false,\n                toneVisible: false,\n                // synth_player: {\n                //     paused: true\n                // },\n                midi: {\n                    '11.8': 'G',\n                    '12.2': 'H',\n                    '12.6': 'J',\n                    '13.0': 'H',\n                    '13.4': 'J',\n                    '13.8': 'K',\n                    '14.2': 'J',\n                    '14.6': 'K'\n                },\n                note: null,\n                noteCode: null\n            }\n        },\n        computed: {\n        },\n        methods: {\n            start() {\n                this.sound = new Howl({\n                    src: ['mp3/nightcall.mp3']\n                })\n                this.sound.once('load', () => {\n                    this.audio_loaded = true\n                    // this.interval = setInterval(() => {\n                    //     this.currentTime = Math.floor(this.sound.seek() * 10) / 10\n\n                    //     if (this.midi[this.currentTime]) {\n                    //         this.toneVisible = true\n                    //         setTimeout(() => {\n                    //             this.toneVisible = false\n                    //         }, 200)\n                    //     }\n\n                    // }, 50)\n                })\n            },\n            play() {\n                this.sound.play()\n            },\n            test() {\n                var self = this\n                MIDI.loadPlugin({\n                    instruments: ['bass', 'synth_drum', 'acoustic_grand_piano'],\n                    onsuccess: function() {\n                        MIDI.Player.loadFile('mp3/nightcall.mid', () => {\n                            MIDI.Player.addListener(function(data) { // set it to your own function!\n                                var now = data.now; // where we are now\n                                var end = data.end; // time when song ends\n                                var channel = data.channel; // channel note is playing on\n                                var message = data.message; // 128 is noteOff, 144 is noteOn\n                                var note = data.note; // the note\n                                var velocity = data.velocity; // the velocity of the note\n\n                                if (channel == 0) {\n                                    self.note = MIDI.noteToKey[note]\n                                    self.noteCode = note\n                                }\n                            });\n                            MIDI.Player.start()\n                        })\n                    }\n                })\n            }\n        },\n        watch:{\n        }\n    }\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"src"}]}